<?xml version="1.0" encoding="utf-8"?>
<section id="ch_advanced">
  <title>Advanced features</title>
  <section id="adv_actions">
    <title>Actions</title>
    <para>
    Actions allow you to use all the power of the Unix command-line with your emails. You can define various commands, taking parameters such as the current email file, a list of emails, the currently selected text, and so on. In this way, you'll be able to perform various tasks such as editing a raw mail in your text editor, "hide" what you mean using ROT-13, apply patches contained in emails directly, and so on. The only limit is your imagination. You can configure Actions via the Tools menu.
    </para>
    <blockquote>
    	<example><title>Simple <quote>Open With...</quote></title>
	 	<variablelist>
			<varlistentry><term>Menu name: <emphasis>Open with/kate</emphasis> Command Line: <emphasis>kate %p</emphasis></term>
				<listitem><para>Opens the file of the selected decoded MIME part (<emphasis>%p</emphasis>) with the <emphasis>kate</emphasis> text editor.
				    </para></listitem>
		    </varlistentry>
	    	</variablelist>
    	</example>
   	<example><title>Spam management using <ulink url="http://bogofilter.sourceforge.net/">Bogofilter</ulink></title>
		<variablelist>
			<varlistentry><term>Menu name: <emphasis>Bogofilter/Mark as Ham</emphasis> Command Line: <emphasis>bogofilter -n -v -B "%f"</emphasis></term>
				<listitem><para>Marks the currently selected mails (<emphasis>%f</emphasis>) as 'not spam' using <emphasis>Bogofilter</emphasis>.
				    </para></listitem>
		    </varlistentry>
		    <varlistentry><term>Menu name: <emphasis>Bogofilter/Mark as Spam</emphasis> Command Line: <emphasis>bogofilter -s -v -B "%f"</emphasis></term>
			    <listitem><para>Marks the currently selected mails (<emphasis>%f</emphasis>) as 'spam' using <emphasis>Bogofilter</emphasis>.
				    </para></listitem>
		    </varlistentry>
    		</variablelist>
    </example>
    <example><title>Search Google using an external script</title>
	    <variablelist>
		    <varlistentry><term>Menu name: <emphasis>Search/Google</emphasis> Command Line: <emphasis>|/path/to/google_search.pl</emphasis></term>
			    <listitem><para>Searches Google for the currently selected text (<emphasis>|</emphasis>) using the external script <emphasis><ulink url="http://www.sylpheed-claws.net/tools.php">google_search.pl</ulink></emphasis>.
				    </para></listitem>
		    </varlistentry>
	    </variablelist>
    </example>
    </blockquote>
  </section>
  <section id="adv_templates">
    <title>Templates</title>
    <para>
    Templates are used in composition windows, and act as a model for emails. Templates can be filled with static text and dynamic parts, such as the original sender's name ("Dear %N, ..."), the date, etc. When applying a template, the dynamic fields will be replaced with the relevant values. You can configure templates via the Tools menu.
    </para>
    <para>
    When applying a template, you will be asked to <quote>Insert</quote> or <quote>Replace</quote>, the difference between replacing and inserting is only concerned with the message body. <quote>Replace</quote> will replace the current composition window message body with the body defined in the template, clearing it if the template body is empty. <quote>Insert</quote> will insert the template's body, if set, at the current cursor position.
    </para>
    <para>
    Whether you choose to Insert or Replace, any To, Cc or Bcc field that is defined in the template will be appended to the compose window's recipients list. If it is defined, the template's Subject will always replace the compose window's Subject.
    </para>
    <para>
    Symbols can be used in all parts of the templates and will be substituted with their respective dynamic value if possible, otherwise no value will be used. This often makes more sense if you apply a template when a replying or forwarding. There is no restriction on which symbols can be used in template parts, even if inserting the body (%M or %Q) may make no sense in common situations.
    </para>
    <para>
    When applying a template, the body is processed first, then the To, Cc, Bcc and Subject fields follow.
    </para>
    <para>
	    Further information and examples of usage can be found in the user-contributed FAQ on the Sylpheed-Claws website <ulink url="http://www.sylpheed-claws.net/faq/">http://www.sylpheed-claws.net/faq/</ulink>
    </para>
   </section>
  <section id="adv_processing">
    <title>Processing</title>
    <para>
    Processing rules are the same as Filtering rules, except that they are applied when entering a folder and apply only to this folder. You can use them to automatically move old mails into an archive folder, or for further dispatching of emails, and more. You can set each folder's Processing rules by right-clicking on it.
    </para>
    <para>
    Processing rules are accompanied by Pre-processing and Post-processing rules. Like Processing rules, they apply only when opening a folder, but like Filtering rules, they are shared accross all folders. You can configure them from the Tools menu. Pre-processing rules are executed before the folder's specific Processing rules, while Post-processing rules are executed afterwards.
    </para>
  </section>
  <section id="adv_colour_labels">
  <title>Colour Labels</title>
  <para>
  Colour labels can be used to denote a message as having a particular significance. To set a colour label simply right-click a message in the Message List and use the <quote>Colour label</quote> submenu.
  </para>
  <para>
  Colour labels are user-configurable. Both the colour and the label can be set by the user. Preferences can be found on the <quote>Configuration/Preferences/Display/Colours</quote> page.
  </para>
  </section>
  <section id="adv_ml_support">
  <title>Mailing-List support</title>
  <para>
  Sylpheed-Claws offers mailing-list support from the <quote>Message/Mailing-List/</quote> submenu. When you have a mailing-list message selected, the submenu allows you to quickly initiate subscribing, unsubscribing, posting, getting help, contacting the list owner, and viewing the list archive; either by opening a new Compose window with the appropriate address pre-filled, or by opening the URL in your web browser.
  </para>
  </section>
  <section id="adv_plugins">
    <title>Plugins</title>
    <para>
      Plugins are the mechanism for extending Sylpheed-Claws' capabilities. For example, imagine that you want to store your mails in a remote <acronym>SQL</acronym> database. In most mailers out there this is simply impossible without reworking the internals of the mailer. With Sylpheed-Claws you can simply write a plugin to achieve the task.
    </para>
    <para>
	    This is just an example of the possibilities. A good number of plugins developed for Sylpheed-Claws already exist, and more are to come. The <link linkend="ch_plugins">Extending Sylpheed-Claws section</link> gives details of them.
    </para>
  </section>
  <section id="deploying">
    <title>Deploying Sylpheed-Claws</title>
    <para>
    The initial configuration wizard tries to guess various fields using information gathered from the system, such as username, hostname, and more. As it is oriented towards general use, the default values often have to be fixed. However, this wizard is customisable, in a manner designed to allow system administrators to deploy Sylpheed-Claws easily over various users of one machine, or even over multiple machines installed via some replication tool.
    </para>
    <para>
    The first part consists of creating a wizard configuration template and setting the various default parameters of a new Sylpheed-Claws installation.
    </para>
    <itemizedlist>
      <listitem><para>Start with a new user who does not have a ~/.sylpheed-claws directory, ideally a new user.</para></listitem>
      <listitem><para>Start Sylpheed-Claws and go through the wizard. The values you fill in will be of no use for the future deployment, so you can click next-next-next.</para></listitem>
      <listitem><para>Once the wizard is finished and you have Sylpheed-Claws' main window opened, configure the various defaults you want to have in the master. You can load plugins, add people or LDAP servers in the addressbook, create filtering rules, and so on.</para></listitem>
      <listitem><para>If needed, and if the deployed Sylpheed-Claws will use MH folders, you can create subdirectories in the mailbox.</para></listitem>
      <listitem><para>Next, quit Sylpheed-Claws.</para></listitem>
      <listitem><para>Now, edit the newly created wizard template file, ~/.sylpheed-claws/accountrc.tmpl. In this file, you will see different variables, corresponding to the wizard's fields. You can leave some commented, in which case the usual default will be used, or specify values or variables. Not all fields can contain variables; for example, smtpauth, smtpssl and recvssl are booleans, either 0 or 1, and recvtype is an integer value. The other fields, like name, email, or recvuser, are parsed by the wizard and the variables they contain are replaced by values. This allows you to specify everything as needed for your site, even if you have strange server names or server logins.</para></listitem>
      <listitem><para>Save this file, and delete both ~/.sylpheed-claws/accountrc, (which contains your dummy account) and ~/.sylpheed-claws/folderlist.xml, (so that the folder tree will be correctly parsed for new users). Recursively copy .sylpheed-claws to /etc/skel/; if the deployed Sylpheed-Claws will use MH folders, also copy the created Mail directory. chown all of /etc/skel/.sylpheed-claws and /etc/skel/Mail to root:root for security reasons.</para></listitem>
      <listitem><para>Test! Create a new user, login as that user, run Sylpheed-Claws. If you filled everything as you wanted, this user will just have to fill in his passwords.</para></listitem>
      <listitem><para>Now, if you're creating a master for a site-wide deployment, you can continue with this process. If you were just doing it for one machine, you're done!</para></listitem>
    </itemizedlist>
    <para>
    Here are the different variables of the accountrc.tmpl file:
    </para>
    <variablelist>
     <varlistentry><term>domain</term>
      <listitem><para>Your domain name (example.com). If not set, it'll be extracted from the hostname.</para></listitem></varlistentry>
     <varlistentry><term>name</term>
      <listitem><para>The user's name. If not set, it'll be extracted from Unix login information, which is usually ok.</para></listitem></varlistentry>
     <varlistentry><term>email</term>
      <listitem><para>The user's email. If not set, it'll be extracted from $name and $domain.</para></listitem></varlistentry>
     <varlistentry><term>organization</term>
      <listitem><para>Your organization. If not set, it'll be empty.</para></listitem></varlistentry>
     <varlistentry><term>smtpserver</term>
      <listitem><para>The smtp server to use. If not set, it'll be smtp.$domain</para></listitem></varlistentry>
     <varlistentry><term>smtpauth</term>
      <listitem><para>0 or 1. Whether to authenticate on the SMTP server. If not set, it'll be 0.</para></listitem></varlistentry>
     <varlistentry><term>smtpuser</term>
      <listitem><para>The login on the SMTP server. If not set, it'll be empty (same login as for reception)</para></listitem></varlistentry>
     <varlistentry><term>smtppass</term>
      <listitem><para>The password on the SMTP server. If not set, it'll be empty (if smtppass is empty but smtpuser is not, the user will be asked for the password).</para></listitem></varlistentry>
     <varlistentry><term>recvtype</term>
      <listitem><para>The type of server to receive from. 0 for POP3, 3 for IMAP4, 5 for a local MBOX file. If not set, it'll be 0 (POP3).</para></listitem></varlistentry>
     <varlistentry><term>recvserver</term>
      <listitem><para>The reception server. If not set, it'll be (pop|imap).$domain, depending on $recvtype.</para></listitem></varlistentry>
     <varlistentry><term>recvuser</term>
      <listitem><para>The login on the reception server. If not set, it'll be extracted from the Unix login information.</para></listitem></varlistentry>
     <varlistentry><term>recvpass</term>
      <listitem><para>The password on the reception server. If not set, it'll be empty (the user will be asked for it once per session).</para></listitem></varlistentry>
     <varlistentry><term>imapdir</term>
      <listitem><para>The IMAP subdirectory. If not set, it'll be empty, which is often sufficient.</para></listitem></varlistentry>
     <varlistentry><term>mboxfile</term>
      <listitem><para>The MBOX file to receive from if $recvtype is 5. If not set, /var/mail/$LOGIN.</para></listitem></varlistentry>
     <varlistentry><term>mailbox</term>
      <listitem><para>The MH mailbox to store mail in (for $recvtype 0 or 5). If not set, it'll be "Mail".</para></listitem></varlistentry>
     <varlistentry><term>smtpssl</term>
      <listitem><para>0 or 1. Whether to use SSL for sending mail. If not set, it'll be 0.</para></listitem></varlistentry>
     <varlistentry><term>recvssl</term>
      <listitem><para>0 or 1. Whether to use SSL for receiving mail. If not set, it'll be 0.</para></listitem></varlistentry>
    </variablelist>
    <para>
    Here are the different variables you can use in the domain, name, email, organization, smtpserver, smtpuser, smtppass, recvserver, recvuser, recvpass, imapdir, mboxfile and mailbox fields:
    </para>
    <variablelist>
     <varlistentry><term>$DEFAULTDOMAIN</term>
      <listitem><para>The domain name as extracted from Unix hostname information. Often wrong.</para></listitem></varlistentry>
     <varlistentry><term>$DOMAIN</term>
      <listitem><para>The domain name as set in the domain variable, the first of the template file.</para></listitem></varlistentry>
     <varlistentry><term>$USERNAME</term>
      <listitem><para>The user's real name.</para></listitem></varlistentry>
     <varlistentry><term>$LOGIN</term>
      <listitem><para>The user's Unix login.</para></listitem></varlistentry>
     <varlistentry><term>$NAME_MAIL</term>
      <listitem><para>The user's real name as set in the name variable of the template field, in lowercase and with spaces replaced by dots. "Colin Leroy" becomes "colin.leroy".</para></listitem></varlistentry>
     <varlistentry><term>$EMAIL</term>
      <listitem><para>The email address as set in the email variable of the template field.</para></listitem></varlistentry>
    </variablelist>
    <para>
    Be sure not to use a variable before defining it.
    </para>
  </section>
  <section id="adv_hidden">
    <title>Hidden preferences</title>
    <para>
    There are a number of hidden preferences in Sylpheed-Claws, preferences that some users who we wanted to please couldn't live without, but which did not have a place in the GUI in our opinion. You can find the following, and change them while Sylpheed-Claws is not running in ~/.sylpheed-claws/sylpheedrc.
    </para>
    <variablelist>
	    <varlistentry><term>bold_unread</term>
		    <listitem><para>show unread messages using bold font in Message List</para></listitem>
            </varlistentry>
	    <varlistentry><term>cache_max_mem_usage</term>
		    <listitem><para>the maximum amount of memory to use to cache messages, in kB.</para></listitem>
	    </varlistentry>
	    <varlistentry><term>cache_min_keep_time</term>
		    <listitem><para>the minimum time to keep a cache in memory, in minutes. Caches more recent than this time will not be freed, even if the memory usage is too high.</para></listitem>
	    </varlistentry>
	    <varlistentry><term>compose_no_markup</term>
		    <listitem><para>don't use bold and italic text in Compose dialogue's account selector</para></listitem>
	    </varlistentry>
	    <varlistentry><term>enable_hscrollbar</term>
		    <listitem><para>enables horizontal scrollbar in Message List</para></listitem>
	    </varlistentry>
	    <varlistentry><term>enable_rules_hint</term>
		    <listitem><para>enable alternate lines in GtkTreeViews</para></listitem>
	    </varlistentry>
	    <varlistentry><term>enable_swap_from</term>
		    <listitem><para>display sender's email address in To column in Sent folder instead of recipient's</para></listitem>
	    </varlistentry>
	    <varlistentry><term>folderview_vscrollbar_policy</term>
		    <listitem><para>specify the policy of vertical scroll bar of folder view</para></listitem>
	    </varlistentry>
	    <varlistentry><term>hover_timeout</term>
		    <listitem><para>time in milliseconds that will cause a folder tree to expand during drag 'n' drop when the mouse cursor is held over it</para></listitem>
	    </varlistentry>
	    <varlistentry><term>log_error_color</term><term>log_in_color</term><term>log_msg_color</term><term>log_out_color</term><term>log_warn_color</term>
			<listitem><para>colours used in log window</para></listitem>
	    </varlistentry>
	    <varlistentry><term>statusbar_update_step</term>
		    <listitem><para>update stepping in progress bars</para></listitem>
	    </varlistentry>
	    <varlistentry><term>textview_cursor_visible</term>
		    <listitem><para>display the cursor in the message view</para></listitem>
	    </varlistentry>
	    <varlistentry><term>thread_by_subject_max_age</term>
		    <listitem><para>number of days to include a message in a thread when using 'Thread using subject in addition to standard headers'</para></listitem>
	    </varlistentry>
	    <varlistentry><term>toolbar_detachable</term>
		    <listitem><para>hide handles in the toolbars</para></listitem>
	    </varlistentry>
	    <varlistentry><term>utf8_instead_of_locale_for_broken_mail</term>
		    <listitem><para>use UTF-8 encoding for broken mails instead of current locale</para></listitem>
	    </varlistentry>
	    <varlistentry><term>warn_dnd</term>
		    <listitem><para>display a confirmation dialog on drag 'n' drop of folders</para></listitem>
	    </varlistentry>
    </variablelist>
  </section>
</section>
