<?xml version="1.0" encoding="utf-8"?>
<section id="ch_advanced">
  <title>Advanced features</title>
  <section id="adv_actions">
    <title>Actions</title>
    <para>
	Actions allow you to use all the power of the Unix command-line with 
	your emails. You can define various commands, taking parameters such 
	as the current email file, a list of emails, the currently selected 
	text, and so on. In this way, you'll be able to perform various tasks
	such as editing a raw mail in your text editor, 
	<emphasis>hide</emphasis> what you mean using ROT-13, apply patches 
	contained in emails directly, and so on. The only limit is your 
	imagination. You can configure Actions via the <quote>Tools</quote> 
	menu.
    </para>
    <blockquote>
      <example>
        <title>Simple <quote>Open With...</quote></title>
	<variablelist>
	  <varlistentry>
	    <term>
	Menu name: <emphasis>Open with/kate</emphasis> 
	Command Line: <command>kate %p</command>
	    </term>
	    <listitem>
	      <para>
	Opens the file of the selected decoded MIME part 
	(<emphasis>%p</emphasis>) with the <emphasis>kate</emphasis> text 
	editor.
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </example>
      <example>
        <title>Spam management using <ulink 
	  url="http://bogofilter.sourceforge.net/">Bogofilter</ulink>
	</title>
	<variablelist>
	  <varlistentry>
	    <term>
	Menu name: <emphasis>Bogofilter/Mark as Ham</emphasis> 
	Command Line: <command>bogofilter -n -v -B "%f"</command>
	    </term>
	    <listitem>
	      <para>
	Marks the currently selected mails (<emphasis>%f</emphasis>) as
	<quote>not spam</quote> using <emphasis>Bogofilter</emphasis>.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>
	Menu name: <emphasis>Bogofilter/Mark as Spam</emphasis> 
	Command Line: <command>bogofilter -s -v -B "%f"</command>
	    </term>
	    <listitem>
	      <para>
	Marks the currently selected mails (<emphasis>%f</emphasis>) as 
	<quote>spam</quote> using <emphasis>Bogofilter</emphasis>.
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </example>
      <example>
        <title>Search Google using an external script</title>
	<variablelist>
	  <varlistentry>
	    <term>
	Menu name: <emphasis>Search/Google</emphasis> 
	Command Line: <command>|/path/to/google_search.pl</command>
	    </term>
	    <listitem>
	      <para>
	Searches Google for the currently selected text 
	(<emphasis>|</emphasis>) using the external script <emphasis><ulink 
	url="http://www.sylpheed-claws.net/tools.php"
	>google_search.pl</ulink></emphasis>.
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </example>
    </blockquote>
  </section>
  <section id="adv_templates">
    <title>Templates</title>
    <para>
	Templates are used in composition windows, and act as a model for 
	emails. Templates can be filled with static text and dynamic parts, 
	such as the original sender's name (<quote>Dear %N, ...</quote>), 
	the date, etc. When applying a template, the dynamic fields will be 
	replaced with the relevant values. You can configure templates via 
	the <quote>Tools</quote> menu.
    </para><para>
	When applying a template, you will be asked to <quote>Insert</quote>
	or <quote>Replace</quote>, the difference between replacing and 
	inserting is only concerned with the message body. 
	<quote>Replace</quote> will replace the current composition window 
	message body with the body defined in the template, clearing it if 
	the template body is empty. <quote>Insert</quote> will insert 
	the template's body, if set, at the current cursor position.
    </para><para>
	Whether you choose to Insert or Replace, any To, Cc or Bcc field 
	that is defined in the template will be appended to the compose 
	window's recipients list. If it is defined, the template's Subject 
	will always replace the compose window's Subject.
    </para><para>
	Symbols can be used in all parts of the templates and will be 
	substituted with their respective dynamic value if possible, otherwise 
	no value will be used. This often makes more sense if you apply a 
	template when replying or forwarding, otherwise most of the symbols 
	value will be undefined. There is no restriction on which symbols can 
	be used in template parts, even if inserting the body (%M or %Q) may 
	make no sense in common situations.
    </para><para>
	When applying a template, the body is processed first, then the To, Cc,
	Bcc and Subject fields follow.
    </para><para>
	Further information and examples of usage can be found in the 
	user-contributed FAQ on the Sylpheed-Claws website <ulink 
	url="http://www.sylpheed-claws.net/faq/"
	>http://www.sylpheed-claws.net/faq/</ulink>.
    </para>
   </section>
  <section id="adv_processing">
    <title>Processing</title>
    <para>
	Processing rules are the same as Filtering rules, except that they are 
	applied when entering a folder and apply only to this folder. You can 
	use them to automatically move old mails into an archive folder, or for
	further dispatching of emails, and more. You can set each folder's 
	Processing rules by right-clicking on it.
    </para><para>
	Processing rules are accompanied by Pre-processing and Post-processing 
	rules. Like Processing rules, they apply only when opening a folder, 
	but like Filtering rules, they are shared accross all folders. You can 
	configure them from the <quote>Tools</quote> menu. Pre-processing rules
	are executed before the folder's specific Processing rules, while 
	Post-processing rules are executed afterwards.
    </para>
  </section>
  <section id="adv_colour_labels">
    <title>Colour Labels</title>
    <para>
	Colour labels can be used to denote a message as having a particular 
	significance. To set a colour label simply right-click a message in the
	Message List and use the <quote>Color label</quote> submenu.
    </para><para>
	Colour labels are user-configurable. Both the colour and the label can 
	be set by the user. Preferences can be found on the 
	<quote>Configuration/Preferences/Display/Colors</quote> page.
    </para>
  </section>
  <section id="adv_ml_support">
    <title>Mailing-List support</title>
    <para>
	Sylpheed-Claws offers mailing-list support from the 
	<quote>Message/Mailing-List/</quote> submenu. When you have a 
	mailing-list message selected, the submenu allows you to quickly 
	initiate subscribing, unsubscribing, posting, getting help, contacting 
	the list owner, and viewing the list archive; either by opening a new 
	Compose window with the appropriate address pre-filled, or by opening 
	the URL in your web browser.
    </para>
  </section>
  <section id="adv_plugins">
    <title>Plugins</title>
    <para>
	Plugins are the mechanism for extending Sylpheed-Claws' capabilities. 
	For example, imagine that you want to store your mails in a remote 
	<acronym>SQL</acronym> database. In most mailers out there this is 
	simply impossible without reworking the internals of the mailer. With 
	Sylpheed-Claws you can simply write a plugin to achieve the task.
    </para><para>
	This is just an example of the possibilities. A good number of plugins 
	developed for Sylpheed-Claws already exist, and more are to come. The 
	<link linkend="ch_plugins">Extending Sylpheed-Claws section</link> 
	gives details of them.
    </para>
  </section>
  <section id="deploying">
    <title>Deploying Sylpheed-Claws</title>
    <para>
	The initial configuration wizard tries to guess various fields using 
	information gathered from the system, such as username, hostname, and 
	more. As it is oriented towards general use, the default values often 
	have to be fixed. However, this wizard is customisable, in a manner 
	designed to allow system administrators to deploy Sylpheed-Claws easily
	over various users of one machine, or even over multiple machines 
	installed via some replication tool.
    </para><para>
	The first part consists of creating a wizard configuration template 
	and setting the various default parameters of a new Sylpheed-Claws 
	installation.
    </para>
    <itemizedlist>
      <listitem>
        <para>
	Start with a user who does not have a <filename class="directory"
	>~/.sylpheed-claws</filename> directory, ideally a new user.
	</para>
      </listitem>
      <listitem>
	<para>
	Start Sylpheed-Claws and go through the wizard. The values you fill in 
	will be of no use for the future deployment, so you can click 
	next-next-next.
	</para>
      </listitem>
      <listitem>
        <para>
	Once the wizard is finished and you have Sylpheed-Claws' main window 
	opened, configure the various defaults you want to have in the master. 
	You can load plugins, add people or LDAP servers in the addressbook, 
	create filtering rules, and so on.
	</para>
      </listitem>
      <listitem>
	<para>
	If needed, and if the deployed Sylpheed-Claws will use MH folders, you 
	can create subdirectories in the mailbox.
	</para>
      </listitem>
      <listitem>
	<para>
	Next, quit Sylpheed-Claws.
	</para>
      </listitem>
      <listitem>
	<para>
	Now, edit the newly created wizard template file, 
	<filename>~/.sylpheed-claws/accountrc.tmpl</filename>. In this file, 
	you will see different variables, corresponding to the wizard's fields.
	You can leave some commented, in which case the usual default will be 
	used, or specify values or variables. Not all fields can contain 
	variables; for example, <literal>smtpauth</literal>, 
	<literal>smtpssl</literal> and <literal>recvssl</literal> are booleans,
	either 0 or 1, and <literal>recvtype</literal> is an integer value. The
	other fields, like <literal>name</literal>, <literal>email</literal>, 
	or <literal>recvuser</literal>, are parsed by the wizard and the 
	variables they contain are replaced by values. This allows you to 
	specify everything as needed for your site, even if you have strange 
	server names or server logins.
	</para>
      </listitem>
      <listitem>
	<para>
	Save this file, and delete both 
	<filename>~/.sylpheed-claws/accountrc</filename>, (which contains your 
	dummy account) and 
	<filename>~/.sylpheed-claws/folderlist.xml</filename>, (so that the 
	folder tree will be correctly parsed for new users). Recursively copy 
	<filename class="directory">.sylpheed-claws</filename> to 
	<filename class="directory">/etc/skel/</filename>; if the deployed 
	Sylpheed-Claws will use MH folders, also copy the created 
	<filename class="directory">Mail</filename> directory. chown all of 
	<filename class="directory">/etc/skel/.sylpheed-claws</filename> 
	and <filename class="directory">/etc/skel/Mail</filename> to 
	<literal>root:root</literal> for security reasons.
	</para>
      </listitem>
      <listitem>
	<para>
	Test! Create a new user, login as that user, run Sylpheed-Claws. If you
	filled everything as you wanted, this user will just have to fill in 
	his passwords.
	</para>
      </listitem>
      <listitem>
	<para>
	Now, if you're creating a master for a site-wide deployment, you can 
	continue with this process. If you were just doing it for one machine, 
	you're done!
	</para>
      </listitem>
    </itemizedlist>
    <para>
    Here are the different variables of the <filename>accountrc.tmpl</filename>
    file:
    </para>
    <variablelist>
      <varlistentry>
        <term><literal>domain</literal></term>
	<listitem>
	  <para>
	Your domain name (example.com). If not set, it'll be extracted from the
	hostname.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>name</literal></term>
	<listitem>
	  <para>
	The user's name. If not set, it'll be extracted from Unix login 
	information, which is usually ok.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>email</literal></term>
	<listitem>
	  <para>
	The user's email. If not set, it'll be extracted from 
	<literal>$name</literal> and <literal>$domain</literal>.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>organization</literal></term>
	<listitem>
	  <para>
	Your organization. If not set, it'll be empty.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>smtpserver</literal></term>
	<listitem>
	  <para>
	The SMTP server to use. If not set, it'll be 
	<literal>smtp.$domain</literal>.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>smtpauth</literal></term>
	<listitem>
	  <para>
	0 or 1. Whether to authenticate on the SMTP server. If not set, it'll 
	be 0.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>smtpuser</literal></term>
	<listitem>
	  <para>
	The login on the SMTP server. If not set, it'll be empty (same login as
	for reception will be used).
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>smtppass</literal></term>
	<listitem>
	  <para>
	The password on the SMTP server. If not set, it'll be empty (if 
	<literal>smtppass</literal> is empty but <literal>smtpuser</literal> is
	not, the user will be asked for the password).
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>recvtype</literal></term>
	<listitem>
	  <para>
	The type of server to receive from. 0 for POP3, 3 for IMAP4, 5 for a 
	local MBOX file. If not set, it'll be 0 (POP3).
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>recvserver</literal></term>
	<listitem>
	  <para>
	The reception server. If not set, it'll be 
	<literal>(pop|imap).$domain</literal>, depending on 
	<literal>$recvtype</literal>.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>recvuser</literal></term>
	<listitem>
	  <para>
	The login on the reception server. If not set, it'll be extracted from 
	the Unix login information.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>recvpass</literal></term>
	<listitem>
	  <para>
	The password on the reception server. If not set, it'll be empty (the 
	user will be asked for it once per session).
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>imapdir</literal></term>
	<listitem>
	  <para>
	The IMAP subdirectory. If not set, it'll be empty, which is often 
	sufficient.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>mboxfile</literal></term>
	<listitem>
	  <para>
	The MBOX file to receive from if <literal>$recvtype</literal> is 5. 
	If not set, <literal>/var/mail/$LOGIN</literal>.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>mailbox</literal></term>
	<listitem>
	  <para>
	The MH mailbox to store mail in (for <literal>$recvtype</literal> 0 or 
	5). If not set, it'll be <quote>Mail</quote>.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>smtpssl</literal></term>
	<listitem>
	  <para>
	0 or 1. Whether to use SSL for sending mail. If not set, it'll be 0.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>recvssl</literal></term>
	<listitem>
	  <para>
	0 or 1. Whether to use SSL for receiving mail. If not set, it'll be 0.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>
    <para>
	Here are the different variables you can use in the 
	<literal>domain</literal>, <literal>name</literal>, 
	<literal>email</literal>, <literal>organization</literal>, 
	<literal>smtpserver</literal>, <literal>smtpuser</literal>, 
	<literal>smtppass</literal>, <literal>recvserver</literal>, 
	<literal>recvuser</literal>, <literal>recvpass</literal>, 
	<literal>imapdir</literal>, <literal>mboxfile</literal> and 
	<literal>mailbox</literal> fields:
    </para>
    <variablelist>
      <varlistentry>
	<term><literal>$DEFAULTDOMAIN</literal></term>
	<listitem>
	  <para>
	The domain name as extracted from Unix hostname information. 
	Often wrong.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>$DOMAIN</literal></term>
	<listitem>
	  <para>
	The domain name as set in the domain variable, the first of the 
	template file.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>$USERNAME</literal></term>
	<listitem>
	  <para>The user's real name.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>$LOGIN</literal></term>
	<listitem>
	  <para>The user's Unix login.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>$NAME_MAIL</literal></term>
	<listitem>
	  <para>
	The user's real name as set in the name variable of the template field,
	in lowercase and with spaces replaced by dots. 
	<quote>Colin Leroy</quote> becomes <quote>colin.leroy</quote>.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>$EMAIL</literal></term>
	<listitem>
	  <para>
	The email address as set in the email variable of the template field.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>
    <para>
	Be sure not to use a variable before defining it.
    </para>
  </section>
  <section id="adv_hidden">
    <title>Hidden preferences</title>
    <para>
	There are a number of hidden preferences in Sylpheed-Claws, preferences
	that some users who we wanted to please couldn't live without, but 
	which did not have a place in the GUI in our opinion. You can find the 
	following, and change them while Sylpheed-Claws is not running in 
	<filename>~/.sylpheed-claws/sylpheedrc</filename>.
    </para>
    <variablelist>
      <varlistentry>
	<term><literal>bold_unread</literal></term>
	<listitem>
	  <para>
	Show unread messages using bold font in Message List.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>cache_max_mem_usage</literal></term>
        <listitem>
	  <para>
	The maximum amount of memory to use to cache messages, in kB.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>cache_min_keep_time</literal></term>
	<listitem>
	  <para>
	The minimum time to keep a cache in memory, in minutes. Caches more 
	recent than this time will not be freed, even if the memory usage is 
	too high.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>compose_no_markup</literal></term>
	<listitem>
	  <para>
	Don't use bold and italic text in Compose dialogue's account selector.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>enable_dotted_lines</literal></term>
	<listitem>
	  <para>
	Use the <emphasis>old</emphasis> dotted look for Folder List and Message
	List instead of the <emphasis>modern</emphasis> lineless look.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>enable_hscrollbar</literal></term>
	<listitem>
	  <para>
	Enables horizontal scrollbar in Message List.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>enable_rules_hint</literal></term>
	<listitem>
	  <para>
	Enable alternate lines in GtkTreeView components.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>enable_swap_from</literal></term>
	<listitem>
	  <para>
	Display sender's email address in To column in Sent folder instead of 
	recipient's.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>folderview_vscrollbar_policy</literal></term>
	<listitem>
	  <para>
	Specify the policy of vertical scroll bar of folder view.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>hover_timeout</literal></term>
	<listitem>
	  <para>
	Time in milliseconds that will cause a folder tree to expand during 
	drag 'n' drop when the mouse cursor is held over it.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>live_dangerously</literal></term>
	<listitem>
	  <para>
	Don't ask for confirmation before definitive deletion of emails.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>log_error_color</literal></term>
	<term><literal>log_in_color</literal></term>
	<term><literal>log_msg_color</literal></term>
	<term><literal>log_out_color</literal></term>
	<term><literal>log_warn_color</literal></term>
	<listitem>
	  <para>
	Colours used in log window.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>mark_as_read_delay</literal></term>
	<listitem>
	  <para>
	Seconds to wait before marking a mail as read.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>skip_ssl_cert_check</literal></term>
	<listitem>
	  <para>
	Disables the verification of SSL certificates.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>statusbar_update_step</literal></term>
	<listitem>
	  <para>
	Update stepping in progress bars.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>textview_cursor_visible</literal></term>
	<listitem>
	  <para>
	Display the cursor in the message view.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>thread_by_subject_max_age</literal></term>
	<listitem>
	  <para>
	Number of days to include a message in a thread when using 
	<quote>Thread using subject in addition to standard headers</quote>.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>toolbar_detachable</literal></term>
	<listitem>
	  <para>
	Show handles in the toolbars.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>utf8_instead_of_locale_for_broken_mail</literal></term>
	<listitem>
	  <para>
	Use UTF-8 encoding for broken mails instead of current locale.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><literal>warn_dnd</literal></term>
	<listitem>
	  <para>
	Display a confirmation dialog on drag 'n' drop of folders.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>
  </section>
</section>

